<?xml version="1.0"?>
<robot name="mbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- PROPERTY LIST 
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="20" /> 
    <xacro:property name="base_radius" value="0.20"/>
    <xacro:property name="base_length" value="0.16"/>

    <xacro:property name="wheel_mass"   value="2" />
    <xacro:property name="wheel_radius" value="0.06"/>
    <xacro:property name="wheel_length" value="0.025"/>
    <xacro:property name="wheel_joint_y" value="0.115"/>
    <xacro:property name="wheel_joint_z" value="0.075"/>

    <xacro:property name="caster_mass"    value="1" /> 
    <xacro:property name="caster_radius"  value="0.015"/>
    <xacro:property name="caster_joint_x" value="0.14"/>
-->

    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="20" /> 
    <xacro:property name="base_radius" value="0.20"/>
    <xacro:property name="base_length" value="0.16"/>

    <xacro:property name="wheel_mass"   value="2" />
    <xacro:property name="wheel_radius" value="0.06"/>
    <xacro:property name="wheel_length" value="0.025"/>
    <xacro:property name="wheel_joint_y" value="0.19"/>
    <xacro:property name="wheel_joint_z" value="0.05"/>

    <xacro:property name="caster_mass"    value="0.5" /> 
    <xacro:property name="caster_radius"  value="0.015"/> <!-- wheel_radius - ( base_length/2 - wheel_joint_z) -->
    <xacro:property name="caster_joint_x" value="0.18"/>

    <!-- Defining the colors used in this robot -->
    <material name="yellow">
        <color rgba="1 0.4 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95"/>
    </material>
    <material name="gray">
        <color rgba="0.75 0.75 0.75 1"/>
    </material>
    <material name="bgray">
        <color rgba="0.15 0.14 0.15 1"/>
    </material>
    
    
    <!-- Macro for inertia matrix -->
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <!-- Macro for robot wheel -->
    <xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="0 ${reflect*wheel_joint_y} ${-wheel_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>
 	<link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
        </link>
<!--
        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <mesh filename="package://mbot_description/meshes/wheel.dae" />
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <mesh filename="package://mbot_description/meshes/wheel.dae" />
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
        </link>
-->
        <gazebo reference="${prefix}_wheel_link">
           <!--  <material>Gazebo/Gray</material>-->
        </gazebo>

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="${prefix}_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_wheel_joint" >
                <hardwareInterface>VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_wheel_joint_motor">
                <hardwareInterface>VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- Macro for robot caster -->
    <xacro:macro name="caster" params="prefix reflect">
        <joint name="${prefix}_caster_joint" type="continuous">
            <origin xyz="${reflect*caster_joint_x} 0 ${-(base_length/2 + caster_radius)}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_caster_link"/>
            <axis xyz="0 1 0"/>
        </joint>
<!--
        <link name="${prefix}_caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>      
            <sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
        </link>
-->
        <link name="${prefix}_caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>      
            <sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
        </link>

        <gazebo reference="${prefix}_caster_link">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <xacro:macro name="mbot_base_gazebo">
        <link name="base_footprint">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
            </visual>
        </link>
        <gazebo reference="base_footprint">
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 ${base_length/2 + caster_radius*2}" rpy="0 0 0" />        
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <link name="base_link">
            <visual>
                <origin xyz=" 0 0 -0.05" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://mbot_description/meshes/main_body.dae" />
                </geometry>
                <material name="yellow" />
            </visual>
            <collision>
                <origin xyz=" 0 0 -0.04" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://mbot_description/meshes/main_body.dae" />
                </geometry>
            </collision>   
            <cylinder_inertial_matrix  m="${base_mass}" r="${base_radius}" h="${base_length}" />
        </link>

        <gazebo reference="base_link">
            <!--<material>Gazebo/Blue</material>-->
        </gazebo>

        <wheel prefix="left"  reflect="-1"/>
        <wheel prefix="right" reflect="1"/>

        <caster prefix="front" reflect="-1"/>
        <caster prefix="back"  reflect="1"/>

<!-- /////////////////////////////////////  layer2  //////<box size="0.26 0.22 0.01" />//// -->
    <link name="layer2_link">
        <visual>
            <origin xyz="0.0 0 0.27" rpy="0 0 1.5708"/>
            <geometry>
                <cylinder radius="0.14" length="0.007"/>
            </geometry>
	    <material name="bgray" />
        </visual>
    </link>
    <joint name="layer2_joint" type="fixed">
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="layer2_link"/>
    </joint>

    <link name="R1_link">
        <visual>
            <origin xyz="0 -0.12 0.12" rpy="0 0 1.5708"/>
            <geometry>
                <cylinder radius="0.005" length="0.3"/>
            </geometry>
	    <material name="White" />
        </visual>
    </link>
    <joint name="R1_joint" type="fixed">
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="R1_link"/>
    </joint>

    <link name="L1_link">
        <visual>
            <origin xyz="0 0.12 0.12" rpy="0 0 1.5708"/>
            <geometry>
                <cylinder radius="0.005" length="0.3"/>
            </geometry>
	    <material name="White" />
        </visual>
    </link>
    <joint name="L1_joint" type="fixed">
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="L1_link"/>
    </joint>

    <link name="L_link">
        <visual>
            <origin xyz="-0.1 0.08 0.10" rpy="0 0 1.5708"/>
            <geometry>
                <cylinder radius="0.005" length="0.1"/>
            </geometry>
	    <material name="White" />
        </visual>
    </link>

    <joint name="L_joint" type="fixed">
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="L_link"/>
    </joint>

    <link name="R_link">
        <visual>
            <origin xyz="-0.1 -0.08 0.10" rpy="0 0 1.5708"/>
            <geometry>
                <cylinder radius="0.005" length="0.1"/>
            </geometry>
	    <material name="White" />
        </visual>
    </link>

    <joint name="R_joint" type="fixed">
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="R_link"/>
    </joint>

 <!-- /////////////////////////////////////  layer1  /////////////////////////////// -->
    <link name="layer1_link">
	<visual>
	    <origin xyz="-0.02 0 0.05" rpy="0 0 1.5708"/>
	    <geometry>
	        <cylinder radius="0.14" length="0.007"/>
	    </geometry>
	    <material name="bgray" />
	</visual>
    </link>
    <joint name="layer1_joint" type="fixed">
	<origin xyz="0 0 0.0" rpy="0 0 0"/>
	<parent link="base_link"/>
	<child link="layer1_link"/>
    </joint>
<!-- /////////////////////////////////////  layer0  /////////////////////////////// -->
    <link name="layer0_link">
	<visual>
	    <origin xyz="0.0 0 0.025" rpy="0 0 1.5708"/>
	    <geometry>
	        <cylinder radius="0.16" length="0.007"/>
	    </geometry>
	    <material name="bgray" />
	</visual>
    </link>
    <joint name="layer0_joint" type="fixed">
	<origin xyz="0 0 0.0" rpy="0 0 0"/>
	<parent link="base_link"/>
	<child link="layer0_link"/>
    </joint>

        <!-- controller -->
        <gazebo>
            <plugin name="differential_drive_controller" 
                    filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>true</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>${wheel_joint_y*2}</wheelSeparation>
                <wheelDiameter>${2*wheel_radius}</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>30</wheelTorque>
                <wheelAcceleration>1.8</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame> 
                <odometryTopic>odom</odometryTopic> 
                <robotBaseFrame>base_footprint</robotBaseFrame>
            </plugin>
        </gazebo> 
    </xacro:macro>
</robot>
